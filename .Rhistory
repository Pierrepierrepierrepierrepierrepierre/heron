#' Fonction demi perimètre
#' @noRd
#' @param a longueur du premier coté
#' @param b longueur du deuxieme coté
#' @param c longueur du troisième coté
#'
#' @return Renvoie le demi-périmétre d'un triangle
#' @examples
#' demi_perimetre(1,2,3): égale à 3
#'
demi_perimetre <- function(a, b, c) {
return((a + b + c) / 2)
}
===========================================================================================================
install.packages("C:/Users/pierr/OneDrive/Documents/Master ECAP/Semestre 2/R/projet final R/heron")
remove.packages("heron2")
remove.packages("heron")
remove.packages("heron")
install.packages("C:/Users/pierr/OneDrive/Documents/Master ECAP/Semestre 2/R/projet final R/heron")
#' Fonction demi perimètre
#' @noRd
#' @param a longueur du premier coté
#' @param b longueur du deuxieme coté
#' @param c longueur du troisième coté
#'
#' @return Renvoie le demi-périmétre d'un triangle
#' @examples
#' demi_perimetre(1,2,3): égale à 3
#'
demi_perimetre <- function(a, b, c) {
return((a + b + c) / 2)
}
heron <- function(a, b, c) {
if (!is.numeric(c(a, b, c))) {
stop("Valeur(s) non numerique(s).")
}
else if (a < 0 | b < 0 | c < 0) {
stop("Longueur(s) négative(s).")
}
else if (a == 0 | b == 0 | c == 0) {
warning("Longueur(s) nulle(s).")
}
p <- demi_perimetre(a, b, c)
return(sqrt(p * ((p - a) * (p - b) * (p - c))))
}
#' Fonction demi perimètre
#' @noRd
#' @param a longueur du premier coté
#' @param b longueur du deuxieme coté
#' @param c longueur du troisième coté
#'
#' @return Renvoie le demi-périmétre d'un triangle
#' @examples
#' demi_perimetre(1,2,3): égale à 3
#'
demi_perimetre <- function(a, b, c) {
return((a + b + c) / 2)
}
heron <- function(a, b, c) {
if (!is.numeric(c(a, b, c))) {
stop("Valeur(s) non numerique(s).")
}
else if (a < 0 | b < 0 | c < 0) {
stop("Longueur(s) négative(s).")
}
else if (a == 0 | b == 0 | c == 0) {
warning("Longueur(s) nulle(s).")
}
p <- demi_perimetre(a, b, c)
return(sqrt(p * ((p - a) * (p - b) * (p - c))))
}
library(heron)
git remot -v
